Фрейворк Singlec(Одинокий 1С)
Универсальный инструмент для разработки приложений на базе 1С 8.x
Понятие универсальность включает себя абстрагирование от конкретной платформы 1с 8.x и конкретных конфигураций.
Обычные и управляемые формы объедены в одну сущность. Реализация форм происходит с использованием xml файлов. В них описывается структура
формы, положения контролов и реализация событий контролов и их взаимодействие между ними. Это позволяет уменьшить связанность контрола на уровне его
программной реализации с другими кониролами. Другими словами один контрол ничего не знает о других контролах, связь происходит в xml файле.
Абстрагирование от конфигураций достигается реализацией промежуточных объектов на базе xml схем, которые в последствии специальным классом-адаптером
приспасабливаются для работы с любой конфигурацией.

Структура фрейворка приближает разработку приложений на 1С к ООП. В понятие фреймворка включено определение Class - это отдельная обработка, осуществляющая
имитацию класса. У класса есть поля и методы. Методы деляться на 2 типа - public и private. Это позволяет инкапсулировать(спрятать) внутренние классы
и закрыть к ним доступ из других классов. Каждый класс имеет в себе предопределенные методы(Init, Command, CC).
Подгрузка классов является ленивой, т.е. он подгружается только в том случае, если к его методу обращаются.
По сути каждый класс является singleton(одиночкой). Создается только один экземпляр.

Дополнительные настройки каждого класса можно описывать в xml файле(beans.xml), Н-р класс работает с веб-сервисом у которого есть URL адрес
URL адрес может измениться и для того, что бы не вшивать его в код можно описать его в xml настройках и обращаться к этим настройкам уже в самом классе.
В каждый bean(это одтельная настройка для конкретного класса) можно вкладывать вложенные bean, тем самым организовать иерархию bean подобную 
иерархии классов

Фреймворк позволяет реализовать универсальные хранилища для данных в виде организованных списков с однородными данными или же в виде универсального
хранилища любой информации.Хранилище можно реализовать как в 1с(Н-р в управлении торговлей есть регистр с настройками), в файловом варианте
или в любой из баз данных, написав под нее драйвер управления.На текущий момент драйвер управления реализован для БД MySQL.

Так как фрейворк реализован как универсальный инструмент разработки для всех конфигураций 1с, он асбтрагируется от сущностей и структуры метаданных
каждой конфигурации с помощью реализации собственной структуры данных, которая в последствии адаптируется для каждой конфигурации отдельно с
исплозованием классов-адаптеров.

Фрейворк уже содержит классы, позволяющие упростить разработку, есть классы, которые расширяют функционал типовых классов 1с(Н-р: ТаблицаЗначений, Массив)

Фрейворк написан на ангийском языке. Выбор определен тем, что при реализации крупних приложений на других языках(Н-р: Java, реализация кода на англ)
для совместного использования с фреймворком появляется сложность в чтении одинаковых сущностей(Н-р в 1с - мы разработали объект с названием ПрофилиПодключения, 
а на Java ConnectionProfile - это просто не удобно).

Отличительная особенность работы фрейворка заключается в том, что он заложил в себе понятие универсального источника данных(класс db). 
При реализации программ нам приходится часто обращаться к таким источникам, как http ресурс, email, базы данных, файлы(в том числе и архивы, Excel).
Но в итоге каждый из источников имеет ряд схожих черт - CRUD (https://ru.wikipedia.org/wiki/CRUD).
Для кадого источник данных описывается свой драйвер с которым уже непосредственно работают другие классы.

Правила взаимодействия с драйверами описывается с помощью также универсального механизма ObjectListOptions. Например из источника базы данных MySQL
необходимо получить список записей. Мы не пишем прямой SQL запрос, а просто заполняем ObjectListOptions, на основании которого происходит формирование
запроса.Другой пример: с почты нам нужно получить конкретные почтовые сообщения - в этом случае мы не устанавливаем сами фильтры для внутреннего объекта
1с, работающий с почтой, а передаем драйверу ObjectListOptions, который уже преобразуется в фильтры и делает запрос.
С помощью ObjectListOptions мы можем обращаться к любому источнику данных не задумываясь о его специфики.


