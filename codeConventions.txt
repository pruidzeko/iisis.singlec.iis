1.Ќазвание класса в верблюжей аннотации;
2. ѕри изменении имени обработки(класса), необходимо изменить в конфигураторе параметры »м€ и —иноним текущего класса
3. ѕравильное написание кода:
		а) „ередование параметров метода:
			Function(a, b, c) - правильно
			Function(a,b,c) - неправильно
		б) ѕрисвоение значени€ переменной:
			a = b; - правильно
			a=b; - неправильно
4. »з€щность написани€ кода заключаетс€ не в том, что реализаци€ алгоритма написана в одну строчку, а в нагл€дности и простоте.
≈сли же код при его анализе другим специалистом вызывает сложности - это неправельный выбор архитектуры. –азбейте код на простые задачи,
разделите на различные методы.  аждый метод должен выполн€ть одну задачу, сформированную одним глаголом(ѕолучить,«аписать,–аспределить).
≈сли же нет возможности реализовать код по этим правилам, об€зательно в сложных местах сделайте подробный комментарий вашего кода, тем самым вы
упростите задачу и себе(если вернетесь к этому участку через пару лет) и другим специалистам.
5.ѕравила именовани€ переменных:
	ObjectList - дл€ ValueList, ValueTable;
	ObjectListRow - дл€ конкретной сущности из ObjectList
	Objects - дл€ Array;
	Object - дл€ конкретной сущности из Array;
	ObjectMap - дл€ Structure, Map;
	Item - дл€ конкретной сущности из ObjectMap;
6.  аждый класс имеет предопределенные методы:
		Function Command(Command, ...) Export
		Function CC(ClassName, Command, ...)
		Function Init()
		
		ћетоды Command и CC должны всегда находитс€ в самом низу класса поочередно сначала Command потом CC.
		
		